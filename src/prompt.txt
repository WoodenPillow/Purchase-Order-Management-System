(A) Total Functions:
• Login access 
• User Registration

• Item Entry
• Supplier Entry
• Daily Item-wise Sales Entry
• Create a Purchase Requisition (PR)
• Display Requisition 
• Generate Purchase Order (PO)
• List of Purchaser Orders

(A.1) Login - SM, PM, Admin

(B) Sales Manager
• Item Entry (Add/Save/Delete/Edit) 
• Supplier Entry (Add/Save/Delete/Edit) 
• Daily Item-wise Sales Entry (Add/Save/Delete/Edit) 
• Create a Purchase Requisition (Add/Save/Delete/Edit) 
• Display Requisition (View) 
• List of Purchaser Orders(View) 

(C) Purchase Manager 
• List of Items (View)
• List of Suppliers (View)
• Display Requisition (View)
• Generate Purchase Order (Add/Save/Delete/Edit)
• List of Purchaser Orders (View

(D) Administrator
rights to access and update all the application functionalities 
and data 


Itemcode itemname supplierid

Administrator

Administator.java: This seems to be a typo; it should be spelled as Administrator.java.
userManagement.java: Likely responsible for managing users.

Login

Main.java: The main entry point of your application.
User.java: Represents a user entity.
loginAuthentication.java: Handles user authentication during login.
userRegistration.java: Responsible for user registration.
LoginCrendentials.txt

Purchase Manager

PurchaseManager.java: Represents a Purchase Manager user.
generatePurchaseOrder.java: Likely responsible for generating purchase orders.
itemList.java: Displays a list of items.
purchaserOrderList.java: Displays a list of purchase orders.
suppliersList.java: Displays a list of suppliers.
Supplier.txt

Sales Manager

SalesManager.java: Represents a Sales Manager user.
createPurchaseRequisition.java: Likely responsible for creating purchase requisitions.
dailyltemWiseSalesEntry.java: Handles daily item-wise sales entry.
displayOrderList.java: Appears to be related to displaying orders, likely a typo (should probably be displayOrderList.java).
displayRequisition.java: Likely responsible for displaying requisitions.
itemEntry.java: Responsible for entering item details.
supplierEntry.java: Responsible for entering supplier details.
viewPurchaseOrder.java: Likely responsible for viewing purchase orders.

i have these functions and class to be written in java

=======================================================

i'm going to do the part of as below, now we start with itemEntry first, my current item stored in txt file are as followed, but do don't do any action first, wait for my instruction, i will give u 2 variants of code to compare and write me the code according to my item.txt
Item id, item name, item price, item quantity, supplier id
1. itemEntry
2. supplierEntry
3. itemList
4. supplierList


(Items.txt)
I0001,GTX1080,800,10,S0001
I0002,RTX2070,1300,50,S0002
I0003,RTX3080,2250,50,S0003
I0004,RTX4060Ti,3169,5,S0004
I0005,RTX4090Ti,4690,5,S0005

=======================================================

i'm going to do the part of as below, now we continue with supplierEntry, my current supplier stored in txt file are as followed, but do don't do any action first, wait for my instruction, i will give u 2 variants of code to compare and write me the code according to my Supplier.txt
Supplier ID, Supplier Name, Item ID, Supplier Country

1. itemEntry
2. supplierEntry
3. itemList
4. supplierList

(Supplier.txt)
S0001,Geforce.Ltd,I0004,USA
S0002,ROG,I0003,Canada
S0003,EVGA,I0005,Belgium
S0004,Gigabyte,I0001,Taiwan
S0005,MSI,I0002,Taiwan

=======================================================
Based on these two item classes of example, learn from them and implement the requirement as my item.txt and what i said
First item class example:

Second item class example:

